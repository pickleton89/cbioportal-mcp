[project]
name = "cbioportal-mcp"
version = "0.1.0"
description = "A high-performance async Model Context Protocol (MCP) server for accessing cBioPortal cancer genomics data"
authors = [
    {name = "Jeff Kiefer", email = "your.email@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
keywords = ["cbioportal", "mcp", "cancer", "genomics", "ai", "assistant"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "mcp>=1.0.0,<=1.8.0",
    "httpx>=0.24.0",
    "fastmcp>=0.1.0",
    "pyyaml>=6.0.2",
]

[project.urls]
Homepage = "https://github.com/pickleton89/cbioportal-mcp"
Repository = "https://github.com/pickleton89/cbioportal-mcp"
Documentation = "https://github.com/pickleton89/cbioportal-mcp#readme"
Issues = "https://github.com/pickleton89/cbioportal-mcp/issues"

[project.scripts]
cbioportal-mcp = "cbioportal_server:cli_main"

[tool.hatch.build.targets.wheel]
include = [
    "cbioportal_server.py",
    "api_client.py",
    "config.py",
    "utils/",
    "endpoints/",
]

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio==0.26.0",
    "pytest-mock>=3.12.0",
    "syrupy>=4.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["-v"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    ".venv/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0", 
    "pytest-asyncio==0.26.0",
    "pytest-mock>=3.12.0",
    "syrupy>=4.0.0",
]
